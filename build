#!/usr/bin/env bash

set -e

banner() {
  [ -x /usr/bin/figlet ] && figlet $1
  echo $1
}

authnet_cleanup() {
  # auth.net files to remove since .gitignore is not working
  rm -rf library/External/auth.net/patches library/External/auth.net/patches.zip library/External/auth.net/*.pdf library/External/auth.net/*.md
}

initialize_component() {
  banner "Initializing Component"
  cd component && zip --quiet -r ../package/packages/com_claw.zip . && cd - &>/dev/null
}

prepare_media() {
  banner "Preparing Media"
  # prepare media directory
  rm -rf media
  mkdir -p media/js media/css media/fonts
  ## compile
  (cd media_raw/js && /home/maddog/.nvm/versions/node/v22.16.0/bin/npx tsc)

  ## copy
  cp media_raw/joomla.asset.json media/
  cp media_raw/js/*.js media/js/
  cp media_raw/css/* media/css/
  cp media_raw/fonts/* media/fonts/

  # Directories to append to main component package once admin is added
  /usr/bin/zip --quiet -r package/packages/com_claw.zip media
  /usr/bin/zip --quiet -r package/packages/com_claw.zip layouts
}

# Items in SVN, while GPL, are based on third-party packages
# We do not want to distribute these code items because they belong to
# their respective owners; mostly these are patched files to cooperate with
# com_claw libraries
# svn because...legacy repository

retrieve_svn() {
  banner "START SVN"
  pushd /home/maddog/claw_custom_code/components
  svn up
  REV=$(svn info . | grep 'Revision' | awk '{print $2}')
  ./export.sh
  popd

  echo "Finish exporting Revision: ${REV}"
  echo $REV >library/svn/svn_info

  cp ~/tmp/claw_custom_code_current.tar.gz library/svn

  cd library && /usr/bin/zip --quiet -r ../package/packages/lib_claw.zip . && cd - &>/dev/null
  banner "END SVN"
}

build_main_package() {
  banner "Package Build"
  cd package && /usr/bin/zip --quiet -r ../pkg_claw.zip . && cd - &>/dev/null
}

# Build modules separately
# TODO: make loop

build_modules() {
  banner "Module Build"
  local VMODSPONSORS=$(xmllint --xpath '/extension/version/text()' modules/mod_claw_sponsors/mod_claw_sponsors.xml)
  local VMODCART=$(xmllint --xpath '/extension/version/text()' modules/mod_claw_cart/mod_claw_cart.xml)
  local VMODVENDORS=$(xmllint --xpath '/extension/version/text()' modules/mod_claw_vendors/mod_claw_vendors.xml)
  local VMODREGBUTTONS=$(xmllint --xpath '/extension/version/text()' modules/mod_claw_regbuttons/mod_claw_regbuttons.xml)
  local VMODTABFERRET=$(xmllint --xpath '/extension/version/text()' modules/mod_claw_tabferret/mod_claw_tabferret.xml)
  local VMODSCHEDULE=$(xmllint --xpath '/extension/version/text()' modules/mod_claw_schedule/mod_claw_schedule.xml)
  local VMODSPASCHEDULE=$(xmllint --xpath '/extension/version/text()' modules/mod_claw_spaschedule/mod_claw_spaschedule.xml)
  local VMODSKILLSLIST=$(xmllint --xpath '/extension/version/text()' modules/mod_claw_skillslist/mod_claw_skillslist.xml)

  cd modules/mod_claw_sponsors && /usr/bin/zip --quiet -r ../../package/packages/mod_claw_sponsors_$VMODSPONSORS.zip . && cd - &>/dev/null
  cd modules/mod_claw_cart && /usr/bin/zip --quiet -r ../../package/packages/mod_claw_cart_$VMODCART.zip . && cd - &>/dev/null
  cd modules/mod_claw_vendors && /usr/bin/zip --quiet -r ../../package/packages/mod_claw_vendors_$VMODVENDORS.zip . && cd - &>/dev/null
  cd modules/mod_claw_regbuttons && /usr/bin/zip --quiet -r ../../package/packages/mod_claw_regbuttons_$VMODREGBUTTONS.zip . && cd - &>/dev/null
  cd modules/mod_claw_tabferret && /usr/bin/zip --quiet -r ../../package/packages/mod_claw_tabferret_$VMODTABFERRET.zip . && cd - &>/dev/null
  cd modules/mod_claw_schedule && /usr/bin/zip --quiet -r ../../package/packages/mod_claw_schedule_$VMODSCHEDULE.zip . && cd - &>/dev/null
  cd modules/mod_claw_spaschedule && /usr/bin/zip --quiet -r ../../package/packages/mod_claw_spachedule_$VMODSPASCHEDULE.zip . && cd - &>/dev/null
  cd modules/mod_claw_skillslist && /usr/bin/zip --quiet -r ../../package/packages/mod_claw_skillslist_$VMODSKILLSLIST.zip . && cd - &>/dev/null

  ls -l package/packages/mod_claw_*
}

build_plugins() {
  banner "Plugins Build"
  local VPLUGINTASK=$(xmllint --xpath '/extension/version/text()' plugins/task/clawcorp/clawcorp.xml)
  local VCONTENTCLAWREG=$(xmllint --xpath '/extension/version/text()' plugins/content/clawreg/clawreg.xml)
  local VCONTENTCOUPON=$(xmllint --xpath '/extension/version/text()' plugins/content/clawcoupon/clawcoupon.xml)

  cd plugins/task/clawcorp && /usr/bin/zip --quiet -r ../../../package/packages/plg_task_clawcorp_$VPLUGINTASK.zip . && cd - &>/dev/null
  cd plugins/content/clawreg && /usr/bin/zip --quiet -r ../../../package/packages/plg_content_clawreg_$VCONTENTCLAWREG.zip . && cd - &>/dev/null
  cd plugins/content/clawcoupon && /usr/bin/zip --quiet -r ../../../package/packages/plg_content_clawcoupon_$VCONTENTCOUPON.zip . && cd - &>/dev/null
  ls -l package/packages/plg_*
}

OUTPUT=~/tmp/git-$(date +%F)
[ -d $OUTPUT ] && rm -rf $OUTPUT
mkdir -p $OUTPUT
git archive main | tar -xf - -C $OUTPUT

pushd $OUTPUT

authnet_cleanup
initialize_component
prepare_media
retrieve_svn
build_main_package
build_modules
build_plugins

VPACKAGE=$(xmllint --xpath '/extension/version/text()' package/pkg_claw.xml)
VCOMPONENT=$(xmllint --xpath '/extension/version/text()' component/claw.xml)
VLIB=$(xmllint --xpath '/extension/version/text()' library/claw.xml)

echo "Build completed for:"
echo "  PACKAGE: $VPACKAGE"
echo "COMPONENT: $VCOMPONENT"
echo "  LIBRARY: $VLIB"

mv pkg_claw.zip pkg_claw_$VPACKAGE.zip

popd

banner $VPACKAGE
